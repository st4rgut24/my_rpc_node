<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Bomb Ass Bitcoin</title>
		<link rel="stylesheet" href="/css/base.css">
		<link rel="stylesheet" href="/css/index.css">
		<link rel="stylesheet" href="/css/app.css">
	</head>
	<body>
		<section class="todoapp">
			<nav class="nav">
				<ul>
					<li class="user"><%= user.name || user.username || user.email %></li>
					<li>
						<form action="/logout" method="post">
							<button class="logout" type="submit">Sign out</button>
						</form>
					</li>
				</ul>
			</nav>
			<header>
				<h1><a href="/">My Node</a></h1>
			</header>
		</section>
		<section>
			<a href="/getnetworkinfo" class="rpcaction" role="button">get network info</a>
			<a href="/getblockchaininfo" class="rpcaction" role="button">get blockchain info</a>
			<a href="/getpeerinfo" class="rpcaction" role="button">get peer info</a>
			<a href="/getblockstats" class="rpcaction" role="button">get latest block stats</a>
			<a href="/getmininginfo" class="rpcaction" role="button">get mining info</a>
			<a href="/getnettotals" class="rpcaction" role="button">get net totals</a>
		</section>
		<section class="main">
			<% if (data) { %>
				<table>
					<% for(prop in data) { %>
						<tr>
							<td><%= prop %></td>
							 <% if (typeof(data[prop]) === 'object') { %>
								<td>
									<a href=<%=url %>/<%=prop %>>more</a>
								</td>
							 <% } else { %>
								<td>
									<%= data[prop] %>
								</td>
							 <% } %>
						 </tr>
					<% } %>
				</table>
			<% } %>
		</section>
		<canvas id="myChart" style="width:100%;max-width:700px"></canvas>
		<footer class="info">
			<p>Authentication powered by <a href="https://www.passportjs.org">Passport</a></p>
		</footer>
	</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
	<% if (xValues) { %>
		var yValuesStr = '<%- yValues %>';
		var yValues2Str = '<%- yValues2 %>';
		
		var xValuesStr = '<%- xValues %>';
		var yTitle = '<%- yTitle %>';
		
		let xValues = JSON.parse(xValuesStr);
		let yValues = JSON.parse(yValuesStr);
		let yValues2 = JSON.parse(yValues2Str);
		
		console.log('x values', xValues);
		console.log('y values', yValues);
		
		const data = {
		  labels: xValues,
		  datasets: [
			{
			  label: 'inbound connections',
			  data: yValues,
			  borderColor: "rgba(0,0,255,0.1)",
			  yAxisID: 'y',
			},
			{
			  label: 'outbound connections',
			  data: yValues2,
			  borderColor: "rgba(255,0,0,0.1)",
			  yAxisID: 'y1',
			}
		  ]
		};		
		
		const config = {
		  type: 'line',
		  data: data,
		  options: {
			responsive: true,
			interaction: {
			  mode: 'index',
			  intersect: false,
			},
			stacked: false,
			plugins: {
			  title: {
				display: true,
				text: 'Peer Connections'
			  }
			},
			scales: {
			  y: {
				beginAtZero: true,
				stepSize: 1,
				type: 'linear',
				display: true,
				position: 'left',
			  },
			  y1: {
				beginAtZero: true,
				stepSize: 1,
				type: 'linear',
				display: true,
				position: 'right',

				// grid line settings
				grid: {
				  drawOnChartArea: false, // only want the grid lines for one axis to show up
				},
			  },
			}
		  },
		};		
		
		new Chart("myChart", config);	
		
	<% } %>
</script>
<script>
	// remove underline from links
	var els = document.getElementsByTagName('a');

	for (var el = 0; el < els.length; el++) {
		els[el].style["text-decoration"] = "none";
	}
</script>
